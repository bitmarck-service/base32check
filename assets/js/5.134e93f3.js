(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{325:function(e,t,n){"use strict";n.r(t);var r=n(33),o=Object(r.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"about"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#about"}},[e._v("#")]),e._v(" About")]),e._v(" "),n("p",[e._v("This project provides open source implementations of the Base32 data encoding as specified in\n"),n("a",{attrs:{href:"https://tools.ietf.org/html/rfc4648#section-6",target:"_blank",rel:"noopener noreferrer"}},[e._v("RFC 4648, section 6"),n("OutboundLink")],1),e._v(", and a corresponding checksum algorithm, called\n"),n("em",[e._v("Base32Check1")]),e._v(", in various programming languages.")]),e._v(" "),n("p",[e._v("Base32Check1 is a custom, one-digit checksum algorithm which has been originally designed by\n"),n("a",{attrs:{href:"https://espadrine.github.io",target:"_blank",rel:"noopener noreferrer"}},[e._v("Thaddée Tyl"),n("OutboundLink")],1),e._v(" and is described in a\n"),n("a",{attrs:{href:"https://espadrine.github.io/blog/posts/a-base32-checksum.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("blog posting"),n("OutboundLink")],1),e._v(" published online on April 29th, 2019.\nIt is based on a "),n("a",{attrs:{href:"https://www.uni-due.de/imperia/md/content/dc/yanling_2015_check_digit.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("scientific article"),n("OutboundLink")],1),e._v("\nfrom Yanling Chen, Markku Niemenmaa and A. J. Han Vinck, published online by Springer on April 2nd, 2015.\nThe algorithm also consists of some\n"),n("a",{attrs:{href:"https://johnkerl.org/doc/ffcomp.pdf",target:"_blank",rel:"noopener noreferrer"}},[e._v("optimizations which are specific to binary numbers"),n("OutboundLink")],1),e._v(", published online by John Kerl\non April, 2004.")]),e._v(" "),n("p",[e._v("According to the article on Springer, the algorithm reliably detects the following errors, which together account for\nmore than 90% of the most frequent transmission errors according to statistical analysis independently conducted by\nD.F. Beckley and J. Verhoeff:")]),e._v(" "),n("table",[n("thead",[n("tr",[n("th",[e._v("Error")]),e._v(" "),n("th",[e._v("Example")])])]),e._v(" "),n("tbody",[n("tr",[n("td",[e._v("single character substitution")]),e._v(" "),n("td",[n("code",[e._v("..A..")]),e._v(" → "),n("code",[e._v("..B..")])])]),e._v(" "),n("tr",[n("td",[e._v("character transposition with zero characters in between them")]),e._v(" "),n("td",[n("code",[e._v("..AB..")]),e._v(" → "),n("code",[e._v("..BA..")])])]),e._v(" "),n("tr",[n("td",[e._v("character transposition with one character in between them")]),e._v(" "),n("td",[n("code",[e._v("..ABC..")]),e._v(" → "),n("code",[e._v("..CBA..")])])]),e._v(" "),n("tr",[n("td",[e._v("identical substitution of two identical characters with zero characters in between them")]),e._v(" "),n("td",[n("code",[e._v("..AA..")]),e._v(" → "),n("code",[e._v("..BB..")])])]),e._v(" "),n("tr",[n("td",[e._v("identical substitution of two identical characters with one character in between them")]),e._v(" "),n("td",[n("code",[e._v("..ACA..")]),e._v(" → "),n("code",[e._v("..BCB..")])])])])]),e._v(" "),n("details",{staticClass:"custom-block details"},[n("summary",[e._v("DETAILS")]),e._v(" "),n("p",[e._v("Part of the Base32Check1 algorithm is a "),n("a",{attrs:{href:"http://mathworld.wolfram.com/PrimitivePolynomial.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("primitive polynomial"),n("OutboundLink")],1),e._v(".\nWe have chosen this primitive polynomial to be 1 + x + x"),n("sup",[e._v("3")]),e._v(" + x"),n("sup",[e._v("4")]),e._v(" + x"),n("sup",[e._v("5")]),e._v(", which is\ndifferent from the one chosen by Thaddée Tyl, which is 1 + x"),n("sup",[e._v("2")]),e._v(" + x"),n("sup",[e._v("5")]),e._v(".\nAs a consequence, the checksums computed by our sample implementations are different from the ones computed by the\n"),n("a",{attrs:{href:"https://github.com/espadrine/base32check",target:"_blank",rel:"noopener noreferrer"}},[e._v("original Javascript implementation"),n("OutboundLink")],1),e._v(".\nAlongside the sample implementations we also provide test code as evidence that the algorithm's desired properties still\nhold.")])])])}),[],!1,null,null,null);t.default=o.exports}}]);